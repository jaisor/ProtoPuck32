#include <Arduino.h>
#include "MatrixModeFireworks.h"

#define BITMAP_BYTES_PER_PIXEL 4
#define HAND_COLOR_MIN 0x5fff
#define HAND_COLOR_HOUR 0xfd00

const uint8_t BITMAP[] PROGMEM = {
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x56, 0x8e, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 
};

CMatrixModeFireworks::CMatrixModeFireworks(const uint8_t width, const uint8_t height)
: CBaseMatrixMode(width, height) {
    canvas = new GFXcanvas16(width, height);
}

CMatrixModeFireworks::~CMatrixModeFireworks() {
    delete canvas;
}

void CMatrixModeFireworks::draw(CRGB *leds) {

    if (millis() - tMillis > 10) {
        tMillis = millis();
        // clear
        memset(leds, 0, width * height * sizeof(CRGB));

        for(uint8_t y=0; y<height; y++) {
            for(uint8_t x=0; x<width; x++) {
                uint8_t r, g, b;
                uint16_t bi = (y * width + x) * BITMAP_BYTES_PER_PIXEL;

                b = BITMAP[bi] * configuration.ledBrightness;
                g = BITMAP[bi+1] * configuration.ledBrightness;
                r = BITMAP[bi+2] * configuration.ledBrightness;

                leds[ XY(x, y) ] = CRGB(r, g, b);           
            }
        }
    }
    
}

#ifdef KEYPAD
void CMatrixModeFireworks::keyEvent(key_status_t key) {

    switch (key) { 
        case KEY_LEFT: break;
        case KEY_RIGHT: break;
        case KEY_UP: ; break;
        case KEY_DOWN: ; break;
        case KEY_MIDDLE: ; break;
        default: ;
    }
    
}
#endif


